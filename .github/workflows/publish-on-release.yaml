# Inspired by https://github.com/rzk-lang/vscode-rzk/blob/main/.github/workflows/publish-on-release.yml
on:
  release:
    types:
      - published
  workflow_dispatch:

jobs:
  build-vsix:
    name: Build VSIX
    runs-on: ubuntu-latest
    outputs:
      vsixPath: ${{ steps.packageExtension.outputs.vsixPath }}
    steps:
      - name: Checkout üõéÔ∏è
        uses: actions/checkout@v4

      - name: Set up Node 20 üì¶
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: npm

      - name: Install dependencies üß∞
        run: |
          npm ci
          npm install -g @vscode/vsce

      - name: Build the language service
        run: npm run --workspace=./packages/language langium:generate

      - name: Package the extension üîß
        id: packageExtension
        uses: HaaLeo/publish-vscode-extension@v1
        with:
          packagePath: ./packages/extension
          pat: stub
          dryRun: true

      - name: Upload Extension Package as Artifact ‚¨ÜÔ∏è
        uses: actions/upload-artifact@v4
        with:
          path: ${{ steps.packageExtension.outputs.vsixPath }}
          name: ${{ steps.packageExtension.outputs.vsixPath }}
          if-no-files-found: error

  publish-release-vsix:
    name: Attach VSIX to Release
    needs: build-vsix
    runs-on: ubuntu-latest
    permissions:
      contents: write
    if: ${{ github.event_name == 'release' }}
    steps:
      - name: Download VSIX package üì•
        uses: actions/download-artifact@v4
        with:
          name: ${{ needs.build-vsix.outputs.vsixPath }}

      - name: Attach the VSIX to the release
        run: gh release upload ${{ github.event.release.tag_name }} ${{ needs.build-vsix.outputs.vsixPath }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  publish-vscode:
    name: Publish to Visual Studio Marketplace
    needs: build-vsix
    runs-on: ubuntu-latest
    steps:
      - name: Download VSIX package üì•
        uses: actions/download-artifact@v4
        with:
          name: ${{ needs.build-vsix.outputs.vsixPath }}

      - name: Publish to Visual Studio Marketplace
        uses: HaaLeo/publish-vscode-extension@v1
        with:
          pat: ${{ secrets.VSCODE_MARKETPLACE_ACCESS_TOKEN }}
          extensionFile: ${{ needs.build-vsix.outputs.vsixPath }}
          registryUrl: https://marketplace.visualstudio.com

  publish-open-vsx:
    name: Publish to Open VSX Registry
    needs: build-vsix
    runs-on: ubuntu-latest
    steps:
      - name: Download VSIX package üì•
        uses: actions/download-artifact@v4
        with:
          name: ${{ needs.build-vsix.outputs.vsixPath }}

      - name: Publish to Open VSX Registry
        uses: HaaLeo/publish-vscode-extension@v1
        with:
          pat: ${{ secrets.OPEN_VSX_ACCESS_TOKEN  }}
          extensionFile: ${{ needs.build-vsix.outputs.vsixPath }}
          registryUrl: https://open-vsx.org

  # I'm not sure how to upload the zip file and then publish it separately
  build-and-publish-jetbrains:
    name: Build and publish for JetBrains IDEs
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout üõéÔ∏è
        uses: actions/checkout@v4

      - name: Gradle Wrapper Validation üìê
        uses: gradle/actions/wrapper-validation@v3

      - name: Set up Node 20 üì¶
        uses: actions/setup-node@v3
        with:
          node-version: '20'
          cache: npm

      - name: Setup Java üì¶
        uses: actions/setup-java@v4
        with:
          distribution: zulu
          java-version: 17

      - name: Setup Gradle üì¶
        uses: gradle/actions/setup-gradle@v3
        with:
          gradle-home-cache-cleanup: true

      - name: Export Properties
        id: properties
        shell: bash
        working-directory: ./packages/intellij-plugin
        run: |
          PROPERTIES="$(./gradlew properties --console=plain -q)"
          VERSION="$(echo "$PROPERTIES" | grep "^version:" | cut -f2- -d ' ')"
          CHANGELOG="$(./gradlew getChangelog --unreleased --no-header --console=plain -q)"

          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "pluginVerifierHomeDir=~/.pluginVerifier" >> $GITHUB_OUTPUT

          echo "changelog<<EOF" >> $GITHUB_OUTPUT
          echo "$CHANGELOG" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Install language service dependencies üß∞
        run: npm ci

      - name: Build language service üîß
        run: |
          npm run --workspace=./packages/language langium:generate
          npm run --workspace=./packages/extension build

      - name: Build plugin üîß
        working-directory: ./packages/intellij-plugin
        run: ./gradlew buildPlugin

      - name: Extract artifact name
        id: artifact-name
        shell: bash
        working-directory: ./packages/intellij-plugin
        run: |
          cd ./build/distributions
          FILENAME=`ls *.zip`
          echo "filename=${FILENAME:0:-4}" >> $GITHUB_OUTPUT

      - name: Upload plugin artifact ‚¨ÜÔ∏è
        uses: actions/upload-artifact@v4
        with:
          name: ${{ steps.artifact-name.outputs.filename }}
          path: ./packages/intellij-plugin/build/distributions/${{ steps.artifact-name.outputs.filename }}.zip

      - name: Attach the ZIP to the release
        working-directory: ./packages/intellij-plugin
        run: gh release upload ${{ github.event.release.tag_name }} ./build/distributions/${{ steps.artifact-name.outputs.filename }}.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Publish to JetBrains Marketplace
        env:
          PUBLISH_TOKEN: ${{ secrets.JETBRAINS_PUBLISH_TOKEN }}
        run: ./gradlew publishPlugin
